# Generated by Yosys 0.9+4008 (git sha1 1af99480, clang 10.0.0-4ubuntu1 -fPIC -Os)

.model bm_base_memory
.inputs clock we address_in[0] address_in[1] address_in[2] address_in[3] address_out[0] address_out[1] address_out[2] address_out[3] value_in[0] value_in[1] value_in[2] value_in[3]
.outputs value_out[0] value_out[1] value_out[2] value_out[3] out1[0] out1[1] out1[2] out1[3] out2[0] out2[1] out2[2] out2[3]
.subckt $dff CLK=clock D[0]=address_in[0] D[1]=address_in[1] D[2]=address_in[2] D[3]=address_in[3] Q[0]=address[0] Q[1]=address[1] Q[2]=address[2] Q[3]=address[3]
.param CLK_POLARITY 1
.param WIDTH 00000000000000000000000000000100
.subckt $mem RD_ADDR[0]=address_out[0] RD_ADDR[1]=address_out[1] RD_ADDR[2]=address_out[2] RD_ADDR[3]=address_out[3] RD_CLK=$undef RD_DATA[0]=address_out_$memrd_ADDR_DATA[0] RD_DATA[1]=address_out_$memrd_ADDR_DATA[1] RD_DATA[2]=address_out_$memrd_ADDR_DATA[2] RD_DATA[3]=address_out_$memrd_ADDR_DATA[3] RD_EN=$undef WR_ADDR[0]=we_$mux_S_Y[0] WR_ADDR[1]=we_$mux_S_Y[1] WR_ADDR[2]=we_$mux_S_Y[2] WR_ADDR[3]=we_$mux_S_Y[3] WR_CLK=clock WR_DATA[0]=we_$mux_S_1_Y[0] WR_DATA[1]=we_$mux_S_1_Y[1] WR_DATA[2]=we_$mux_S_1_Y[2] WR_DATA[3]=we_$mux_S_1_Y[3] WR_EN[0]=memory_WR_EN[3] WR_EN[1]=memory_WR_EN[3] WR_EN[2]=memory_WR_EN[3] WR_EN[3]=memory_WR_EN[3]
.param ABITS 00000000000000000000000000000100
.param INIT xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.param MEMID "\\memory"
.param OFFSET 00000000000000000000000000000000
.param RD_CLK_ENABLE 0
.param RD_CLK_POLARITY 0
.param RD_PORTS 00000000000000000000000000000001
.param RD_TRANSPARENT 0
.param SIZE 00000000000000000000000000010000
.param WIDTH 00000000000000000000000000000100
.param WR_CLK_ENABLE 1
.param WR_CLK_POLARITY 1
.param WR_PORTS 00000000000000000000000000000001
.subckt $and A[0]=out1[0] A[1]=out1[1] A[2]=out1[2] A[3]=out1[3] B=$false Y[0]=out1_$and_A_Y[0] Y[1]=out1_$and_A_Y[1] Y[2]=out1_$and_A_Y[2] Y[3]=out1_$and_A_Y[3]
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000100
.subckt $dff CLK=clock D[0]=value_out_$and_A_Y[0] D[1]=value_out_$and_A_Y[1] D[2]=value_out_$and_A_Y[2] D[3]=value_out_$and_A_Y[3] Q[0]=out1[0] Q[1]=out1[1] Q[2]=out1[2] Q[3]=out1[3]
.param CLK_POLARITY 1
.param WIDTH 00000000000000000000000000000100
.subckt $dff CLK=clock D[0]=out1_$and_A_Y[0] D[1]=out1_$and_A_Y[1] D[2]=out1_$and_A_Y[2] D[3]=out1_$and_A_Y[3] Q[0]=out2[0] Q[1]=out2[1] Q[2]=out2[2] Q[3]=out2[3]
.param CLK_POLARITY 1
.param WIDTH 00000000000000000000000000000100
.subckt $and A[0]=address_out_$memrd_ADDR_DATA[0] A[1]=address_out_$memrd_ADDR_DATA[1] A[2]=address_out_$memrd_ADDR_DATA[2] A[3]=address_out_$memrd_ADDR_DATA[3] B[0]=address_in[0] B[1]=address_in[1] B[2]=address_in[2] B[3]=address_in[3] Y[0]=value_out_$and_A_Y[0] Y[1]=value_out_$and_A_Y[1] Y[2]=value_out_$and_A_Y[2] Y[3]=value_out_$and_A_Y[3]
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=$undef A[1]=$undef A[2]=$undef A[3]=$undef B[0]=address[0] B[1]=address[1] B[2]=address[2] B[3]=address[3] S=we Y[0]=we_$mux_S_Y[0] Y[1]=we_$mux_S_Y[1] Y[2]=we_$mux_S_Y[2] Y[3]=we_$mux_S_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=$undef A[1]=$undef A[2]=$undef A[3]=$undef B[0]=value_in[0] B[1]=value_in[1] B[2]=value_in[2] B[3]=value_in[3] S=we Y[0]=we_$mux_S_1_Y[0] Y[1]=we_$mux_S_1_Y[1] Y[2]=we_$mux_S_1_Y[2] Y[3]=we_$mux_S_1_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A=$false B=$true S=we Y=memory_WR_EN[3]
.param WIDTH 00000000000000000000000000000001
.names memory_WR_EN[3] memory_WR_EN[0]
1 1
.names memory_WR_EN[3] memory_WR_EN[1]
1 1
.names memory_WR_EN[3] memory_WR_EN[2]
1 1
.names address_out_$memrd_ADDR_DATA[0] value_out[0]
1 1
.names address_out_$memrd_ADDR_DATA[1] value_out[1]
1 1
.names address_out_$memrd_ADDR_DATA[2] value_out[2]
1 1
.names address_out_$memrd_ADDR_DATA[3] value_out[3]
1 1
.names we we_$eq_A_Y
1 1
.end
