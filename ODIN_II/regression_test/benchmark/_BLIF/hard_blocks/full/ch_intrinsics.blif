# Generated by Yosys 0.9+4008 (git sha1 1af99480, clang 10.0.0-4ubuntu1 -fPIC -Os)

.model memset
.inputs clk reset start m[0] m[1] m[2] m[3] m[4] m[5] m[6] m[7] m[8] m[9] m[10] m[11] m[12] m[13] m[14] m[15] m[16] m[17] m[18] m[19] m[20] m[21] m[22] m[23] m[24] m[25] m[26] m[27] m[28] m[29] m[30] m[31] c[0] c[1] c[2] c[3] c[4] c[5] c[6] c[7] c[8] c[9] c[10] c[11] c[12] c[13] c[14] c[15] c[16] c[17] c[18] c[19] c[20] c[21] c[22] c[23] c[24] c[25] c[26] c[27] c[28] c[29] c[30] c[31] n[0] n[1] n[2] n[3] n[4] n[5] n[6] n[7] n[8] n[9] n[10] n[11] n[12] n[13] n[14] n[15] n[16] n[17] n[18] n[19] n[20] n[21] n[22] n[23] n[24] n[25] n[26] n[27] n[28] n[29] n[30] n[31]
.outputs finish return_val[0] return_val[1] return_val[2] return_val[3] return_val[4] return_val[5] return_val[6] return_val[7] return_val[8] return_val[9] return_val[10] return_val[11] return_val[12] return_val[13] return_val[14] return_val[15] return_val[16] return_val[17] return_val[18] return_val[19] return_val[20] return_val[21] return_val[22] return_val[23] return_val[24] return_val[25] return_val[26] return_val[27] return_val[28] return_val[29] return_val[30] return_val[31] memory_controller_write_enable memory_controller_address[0] memory_controller_address[1] memory_controller_address[2] memory_controller_address[3] memory_controller_address[4] memory_controller_address[5] memory_controller_address[6] memory_controller_address[7] memory_controller_address[8] memory_controller_address[9] memory_controller_address[10] memory_controller_address[11] memory_controller_address[12] memory_controller_address[13] memory_controller_address[14] memory_controller_address[15] memory_controller_address[16] memory_controller_address[17] memory_controller_address[18] memory_controller_address[19] memory_controller_address[20] memory_controller_address[21] memory_controller_address[22] memory_controller_address[23] memory_controller_address[24] memory_controller_address[25] memory_controller_address[26] memory_controller_address[27] memory_controller_address[28] memory_controller_address[29] memory_controller_address[30] memory_controller_address[31] memory_controller_in[0] memory_controller_in[1] memory_controller_in[2] memory_controller_in[3] memory_controller_in[4] memory_controller_in[5] memory_controller_in[6] memory_controller_in[7] memory_controller_in[8] memory_controller_in[9] memory_controller_in[10] memory_controller_in[11] memory_controller_in[12] memory_controller_in[13] memory_controller_in[14] memory_controller_in[15] memory_controller_in[16] memory_controller_in[17] memory_controller_in[18] memory_controller_in[19] memory_controller_in[20] memory_controller_in[21] memory_controller_in[22] memory_controller_in[23] memory_controller_in[24] memory_controller_in[25] memory_controller_in[26] memory_controller_in[27] memory_controller_in[28] memory_controller_in[29] memory_controller_in[30] memory_controller_in[31] memory_controller_out[0] memory_controller_out[1] memory_controller_out[2] memory_controller_out[3] memory_controller_out[4] memory_controller_out[5] memory_controller_out[6] memory_controller_out[7] memory_controller_out[8] memory_controller_out[9] memory_controller_out[10] memory_controller_out[11] memory_controller_out[12] memory_controller_out[13] memory_controller_out[14] memory_controller_out[15] memory_controller_out[16] memory_controller_out[17] memory_controller_out[18] memory_controller_out[19] memory_controller_out[20] memory_controller_out[21] memory_controller_out[22] memory_controller_out[23] memory_controller_out[24] memory_controller_out[25] memory_controller_out[26] memory_controller_out[27] memory_controller_out[28] memory_controller_out[29] memory_controller_out[30] memory_controller_out[31]
.subckt $sdffe CLK=clk D[0]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_$pmux_S_Y[0] D[1]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_$pmux_S_Y[1] D[2]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_$pmux_S_Y[2] D[3]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_$pmux_S_Y[3] EN=cur_state_$sdffe_Q_EN Q[0]=cur_state[0] Q[1]=cur_state[1] Q[2]=cur_state[2] Q[3]=cur_state[3] SRST=reset
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param SRST_POLARITY 00000000000000000000000000000001
.param SRST_VALUE 0000
.param WIDTH 00000000000000000000000000000100
.subckt $reduce_bool A[0]=exitcond_$ne_A_A A[1]=s_07_$dffe_Q_EN_$reduce_and_Y_A A[2]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_8 A[3]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_7 A[4]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_6 A[5]=tmp_$dffe_Q_EN_$reduce_and_Y_A A[6]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_5 A[7]=var2_$dffe_Q_EN_$reduce_and_Y_A A[8]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_4 A[9]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_3 A[10]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_2 A[11]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_1 A[12]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A A[13]=finish_$dffe_Q_D_$pmux_Y_S_1 A[14]=finish_$dffe_Q_D_$pmux_Y_S Y=cur_state_$sdffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000001111
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$true B[1]=$false B[2]=$false B[3]=$false Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $pmux A[0]=$undef A[1]=$undef A[2]=$undef A[3]=$undef B[0]=$false B[1]=$false B[2]=$false B[3]=$false B[4]=exitcond_$mux_S_Y[0] B[5]=exitcond_$mux_S_Y[1] B[6]=exitcond_$mux_S_Y[2] B[7]=exitcond_$mux_S_Y[3] B[8]=$true B[9]=$false B[10]=$true B[11]=$true B[12]=$false B[13]=$false B[14]=$true B[15]=$true B[16]=$true B[17]=$true B[18]=$false B[19]=$true B[20]=$false B[21]=$true B[22]=$false B[23]=$true B[24]=$true B[25]=$false B[26]=$false B[27]=$true B[28]=var2_$mux_S_Y[0] B[29]=var2_$mux_S_Y[1] B[30]=var2_$mux_S_Y[2] B[31]=var2_$mux_S_Y[3] B[32]=$true B[33]=$true B[34]=$true B[35]=$false B[36]=$false B[37]=$true B[38]=$true B[39]=$false B[40]=$true B[41]=$false B[42]=$true B[43]=$false B[44]=$false B[45]=$false B[46]=$true B[47]=$false B[48]=$true B[49]=$true B[50]=$false B[51]=$false B[52]=$false B[53]=$true B[54]=$false B[55]=$false B[56]=start_$mux_S_Y[0] B[57]=start_$mux_S_Y[1] B[58]=start_$mux_S_Y[2] B[59]=start_$mux_S_Y[3] S[0]=finish_$dffe_Q_D_$pmux_Y_S S[1]=exitcond_$ne_A_A S[2]=s_07_$dffe_Q_EN_$reduce_and_Y_A S[3]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_8 S[4]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_7 S[5]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_6 S[6]=tmp_$dffe_Q_EN_$reduce_and_Y_A S[7]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_5 S[8]=var2_$dffe_Q_EN_$reduce_and_Y_A S[9]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_4 S[10]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_3 S[11]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_2 S[12]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_1 S[13]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A S[14]=finish_$dffe_Q_D_$pmux_Y_S_1 Y[0]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_$pmux_S_Y[0] Y[1]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_$pmux_S_Y[1] Y[2]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_$pmux_S_Y[2] Y[3]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_$pmux_S_Y[3]
.param S_WIDTH 00000000000000000000000000001111
.param WIDTH 00000000000000000000000000000100
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$false B[1]=$true B[2]=$false B[3]=$false Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_1
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$true B[1]=$true B[2]=$false B[3]=$false Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_2
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$false B[1]=$false B[2]=$true B[3]=$false Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_3
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$true B[1]=$false B[2]=$true B[3]=$false Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_4
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$true B[1]=$true B[2]=$true B[3]=$false Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_5
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$true B[1]=$false B[2]=$false B[3]=$true Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_6
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$false B[1]=$true B[2]=$false B[3]=$true Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_7
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$true B[1]=$true B[2]=$false B[3]=$true Y=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_8
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clk D=tmp_$eq_B_Y EN=scevgep_$dffe_Q_EN Q=exitcond
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=$true A[1]=$false A[2]=$false A[3]=$true B[0]=$false B[1]=$true B[2]=$true B[3]=$true S=exitcond Y[0]=exitcond_$mux_S_Y[0] Y[1]=exitcond_$mux_S_Y[1] Y[2]=exitcond_$mux_S_Y[2] Y[3]=exitcond_$mux_S_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=indvar_next[0] A[1]=indvar_next[1] A[2]=indvar_next[2] A[3]=indvar_next[3] A[4]=indvar_next[4] A[5]=indvar_next[5] A[6]=indvar_next[6] A[7]=indvar_next[7] A[8]=indvar_next[8] A[9]=indvar_next[9] A[10]=indvar_next[10] A[11]=indvar_next[11] A[12]=indvar_next[12] A[13]=indvar_next[13] A[14]=indvar_next[14] A[15]=indvar_next[15] A[16]=indvar_next[16] A[17]=indvar_next[17] A[18]=indvar_next[18] A[19]=indvar_next[19] A[20]=indvar_next[20] A[21]=indvar_next[21] A[22]=indvar_next[22] A[23]=indvar_next[23] A[24]=indvar_next[24] A[25]=indvar_next[25] A[26]=indvar_next[26] A[27]=indvar_next[27] A[28]=indvar_next[28] A[29]=indvar_next[29] A[30]=indvar_next[30] A[31]=indvar_next[31] B[0]=$undef B[1]=$undef B[2]=$undef B[3]=$undef B[4]=$undef B[5]=$undef B[6]=$undef B[7]=$undef B[8]=$undef B[9]=$undef B[10]=$undef B[11]=$undef B[12]=$undef B[13]=$undef B[14]=$undef B[15]=$undef B[16]=$undef B[17]=$undef B[18]=$undef B[19]=$undef B[20]=$undef B[21]=$undef B[22]=$undef B[23]=$undef B[24]=$undef B[25]=$undef B[26]=$undef B[27]=$undef B[28]=$undef B[29]=$undef B[30]=$undef B[31]=$undef S=exitcond Y[0]=exitcond_$mux_S_1_Y[0] Y[1]=exitcond_$mux_S_1_Y[1] Y[2]=exitcond_$mux_S_1_Y[2] Y[3]=exitcond_$mux_S_1_Y[3] Y[4]=exitcond_$mux_S_1_Y[4] Y[5]=exitcond_$mux_S_1_Y[5] Y[6]=exitcond_$mux_S_1_Y[6] Y[7]=exitcond_$mux_S_1_Y[7] Y[8]=exitcond_$mux_S_1_Y[8] Y[9]=exitcond_$mux_S_1_Y[9] Y[10]=exitcond_$mux_S_1_Y[10] Y[11]=exitcond_$mux_S_1_Y[11] Y[12]=exitcond_$mux_S_1_Y[12] Y[13]=exitcond_$mux_S_1_Y[13] Y[14]=exitcond_$mux_S_1_Y[14] Y[15]=exitcond_$mux_S_1_Y[15] Y[16]=exitcond_$mux_S_1_Y[16] Y[17]=exitcond_$mux_S_1_Y[17] Y[18]=exitcond_$mux_S_1_Y[18] Y[19]=exitcond_$mux_S_1_Y[19] Y[20]=exitcond_$mux_S_1_Y[20] Y[21]=exitcond_$mux_S_1_Y[21] Y[22]=exitcond_$mux_S_1_Y[22] Y[23]=exitcond_$mux_S_1_Y[23] Y[24]=exitcond_$mux_S_1_Y[24] Y[25]=exitcond_$mux_S_1_Y[25] Y[26]=exitcond_$mux_S_1_Y[26] Y[27]=exitcond_$mux_S_1_Y[27] Y[28]=exitcond_$mux_S_1_Y[28] Y[29]=exitcond_$mux_S_1_Y[29] Y[30]=exitcond_$mux_S_1_Y[30] Y[31]=exitcond_$mux_S_1_Y[31]
.param WIDTH 00000000000000000000000000100000
.subckt $ne A[0]=exitcond A[1]=exitcond_$ne_A_A B[0]=$true B[1]=$true Y=indvar_$dffe_Q_EN_$reduce_and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$true B[1]=$false B[2]=$true B[3]=$true Y=exitcond_$ne_A_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clk D=finish_$dffe_Q_D EN=finish_$dffe_Q_EN Q=finish
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000001
.subckt $pmux A=$undef B[0]=$true B[1]=$false S[0]=finish_$dffe_Q_D_$pmux_Y_S S[1]=finish_$dffe_Q_D_$pmux_Y_S_1 Y=finish_$dffe_Q_D
.param S_WIDTH 00000000000000000000000000000010
.param WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$false B[1]=$true B[2]=$true B[3]=$true Y=finish_$dffe_Q_D_$pmux_Y_S
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $logic_not A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] Y=finish_$dffe_Q_D_$pmux_Y_S_1
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $reduce_and A[0]=reset_$not_A_Y A[1]=finish_$dffe_Q_EN_$reduce_and_Y_A Y=finish_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $reduce_bool A[0]=finish_$dffe_Q_D_$pmux_Y_S_1 A[1]=finish_$dffe_Q_D_$pmux_Y_S Y=finish_$dffe_Q_EN_$reduce_and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clk D[0]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[0] D[1]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[1] D[2]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[2] D[3]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[3] D[4]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[4] D[5]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[5] D[6]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[6] D[7]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[7] D[8]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[8] D[9]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[9] D[10]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[10] D[11]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[11] D[12]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[12] D[13]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[13] D[14]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[14] D[15]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[15] D[16]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[16] D[17]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[17] D[18]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[18] D[19]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[19] D[20]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[20] D[21]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[21] D[22]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[22] D[23]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[23] D[24]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[24] D[25]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[25] D[26]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[26] D[27]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[27] D[28]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[28] D[29]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[29] D[30]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[30] D[31]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[31] EN=indvar_$dffe_Q_EN Q[0]=indvar[0] Q[1]=indvar[1] Q[2]=indvar[2] Q[3]=indvar[3] Q[4]=indvar[4] Q[5]=indvar[5] Q[6]=indvar[6] Q[7]=indvar[7] Q[8]=indvar[8] Q[9]=indvar[9] Q[10]=indvar[10] Q[11]=indvar[11] Q[12]=indvar[12] Q[13]=indvar[13] Q[14]=indvar[14] Q[15]=indvar[15] Q[16]=indvar[16] Q[17]=indvar[17] Q[18]=indvar[18] Q[19]=indvar[19] Q[20]=indvar[20] Q[21]=indvar[21] Q[22]=indvar[22] Q[23]=indvar[23] Q[24]=indvar[24] Q[25]=indvar[25] Q[26]=indvar[26] Q[27]=indvar[27] Q[28]=indvar[28] Q[29]=indvar[29] Q[30]=indvar[30] Q[31]=indvar[31]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000100000
.subckt $reduce_and A[0]=reset_$not_A_Y A[1]=indvar_$dffe_Q_EN_$reduce_and_Y_A_1 A[2]=indvar_$dffe_Q_EN_$reduce_and_Y_A Y=indvar_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000011
.param Y_WIDTH 00000000000000000000000000000001
.subckt $reduce_bool A[0]=exitcond_$ne_A_A A[1]=tmp_$dffe_Q_EN_$reduce_and_Y_A Y=indvar_$dffe_Q_EN_$reduce_and_Y_A_1
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clk D[0]=indvar[0] D[1]=indvar[1] D[2]=indvar[2] D[3]=indvar[3] D[4]=indvar[4] D[5]=indvar[5] D[6]=indvar[6] D[7]=indvar[7] D[8]=indvar[8] D[9]=indvar[9] D[10]=indvar[10] D[11]=indvar[11] D[12]=indvar[12] D[13]=indvar[13] D[14]=indvar[14] D[15]=indvar[15] D[16]=indvar[16] D[17]=indvar[17] D[18]=indvar[18] D[19]=indvar[19] D[20]=indvar[20] D[21]=indvar[21] D[22]=indvar[22] D[23]=indvar[23] D[24]=indvar[24] D[25]=indvar[25] D[26]=indvar[26] D[27]=indvar[27] D[28]=indvar[28] D[29]=indvar[29] D[30]=indvar[30] D[31]=indvar[31] EN=indvar_next_$dffe_Q_EN Q[0]=indvar_next[0] Q[1]=indvar_next[1] Q[2]=indvar_next[2] Q[3]=indvar_next[3] Q[4]=indvar_next[4] Q[5]=indvar_next[5] Q[6]=indvar_next[6] Q[7]=indvar_next[7] Q[8]=indvar_next[8] Q[9]=indvar_next[9] Q[10]=indvar_next[10] Q[11]=indvar_next[11] Q[12]=indvar_next[12] Q[13]=indvar_next[13] Q[14]=indvar_next[14] Q[15]=indvar_next[15] Q[16]=indvar_next[16] Q[17]=indvar_next[17] Q[18]=indvar_next[18] Q[19]=indvar_next[19] Q[20]=indvar_next[20] Q[21]=indvar_next[21] Q[22]=indvar_next[22] Q[23]=indvar_next[23] Q[24]=indvar_next[24] Q[25]=indvar_next[25] Q[26]=indvar_next[26] Q[27]=indvar_next[27] Q[28]=indvar_next[28] Q[29]=indvar_next[29] Q[30]=indvar_next[30] Q[31]=indvar_next[31]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000100000
.subckt $reduce_and A[0]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_7 A[1]=reset_$not_A_Y Y=indvar_next_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A[0]=m[0] A[1]=m[1] A[2]=m[2] A[3]=m[3] A[4]=m[4] A[5]=m[5] A[6]=m[6] A[7]=m[7] A[8]=m[8] A[9]=m[9] A[10]=m[10] A[11]=m[11] A[12]=m[12] A[13]=m[13] A[14]=m[14] A[15]=m[15] A[16]=m[16] A[17]=m[17] A[18]=m[18] A[19]=m[19] A[20]=m[20] A[21]=m[21] A[22]=m[22] A[23]=m[23] A[24]=m[24] A[25]=m[25] A[26]=m[26] A[27]=m[27] A[28]=m[28] A[29]=m[29] A[30]=m[30] A[31]=m[31] B[0]=indvar_next[0] B[1]=indvar_next[1] B[2]=indvar_next[2] B[3]=indvar_next[3] B[4]=indvar_next[4] B[5]=indvar_next[5] B[6]=indvar_next[6] B[7]=indvar_next[7] B[8]=indvar_next[8] B[9]=indvar_next[9] B[10]=indvar_next[10] B[11]=indvar_next[11] B[12]=indvar_next[12] B[13]=indvar_next[13] B[14]=indvar_next[14] B[15]=indvar_next[15] B[16]=indvar_next[16] B[17]=indvar_next[17] B[18]=indvar_next[18] B[19]=indvar_next[19] B[20]=indvar_next[20] B[21]=indvar_next[21] B[22]=indvar_next[22] B[23]=indvar_next[23] B[24]=indvar_next[24] B[25]=indvar_next[25] B[26]=indvar_next[26] B[27]=indvar_next[27] B[28]=indvar_next[28] B[29]=indvar_next[29] B[30]=indvar_next[30] B[31]=indvar_next[31] Y[0]=m_$and_A_Y[0] Y[1]=m_$and_A_Y[1] Y[2]=m_$and_A_Y[2] Y[3]=m_$and_A_Y[3] Y[4]=m_$and_A_Y[4] Y[5]=m_$and_A_Y[5] Y[6]=m_$and_A_Y[6] Y[7]=m_$and_A_Y[7] Y[8]=m_$and_A_Y[8] Y[9]=m_$and_A_Y[9] Y[10]=m_$and_A_Y[10] Y[11]=m_$and_A_Y[11] Y[12]=m_$and_A_Y[12] Y[13]=m_$and_A_Y[13] Y[14]=m_$and_A_Y[14] Y[15]=m_$and_A_Y[15] Y[16]=m_$and_A_Y[16] Y[17]=m_$and_A_Y[17] Y[18]=m_$and_A_Y[18] Y[19]=m_$and_A_Y[19] Y[20]=m_$and_A_Y[20] Y[21]=m_$and_A_Y[21] Y[22]=m_$and_A_Y[22] Y[23]=m_$and_A_Y[23] Y[24]=m_$and_A_Y[24] Y[25]=m_$and_A_Y[25] Y[26]=m_$and_A_Y[26] Y[27]=m_$and_A_Y[27] Y[28]=m_$and_A_Y[28] Y[29]=m_$and_A_Y[29] Y[30]=m_$and_A_Y[30] Y[31]=m_$and_A_Y[31]
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000100000
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000100000
.param Y_WIDTH 00000000000000000000000000100000
.subckt $dlatch D[0]=s_07[0] D[1]=s_07[1] D[2]=s_07[2] D[3]=s_07[3] D[4]=s_07[4] D[5]=s_07[5] D[6]=s_07[6] D[7]=s_07[7] D[8]=s_07[8] D[9]=s_07[9] D[10]=s_07[10] D[11]=s_07[11] D[12]=s_07[12] D[13]=s_07[13] D[14]=s_07[14] D[15]=s_07[15] D[16]=s_07[16] D[17]=s_07[17] D[18]=s_07[18] D[19]=s_07[19] D[20]=s_07[20] D[21]=s_07[21] D[22]=s_07[22] D[23]=s_07[23] D[24]=s_07[24] D[25]=s_07[25] D[26]=s_07[26] D[27]=s_07[27] D[28]=s_07[28] D[29]=s_07[29] D[30]=s_07[30] D[31]=s_07[31] EN=exitcond_$ne_A_A Q[0]=memory_controller_address[0] Q[1]=memory_controller_address[1] Q[2]=memory_controller_address[2] Q[3]=memory_controller_address[3] Q[4]=memory_controller_address[4] Q[5]=memory_controller_address[5] Q[6]=memory_controller_address[6] Q[7]=memory_controller_address[7] Q[8]=memory_controller_address[8] Q[9]=memory_controller_address[9] Q[10]=memory_controller_address[10] Q[11]=memory_controller_address[11] Q[12]=memory_controller_address[12] Q[13]=memory_controller_address[13] Q[14]=memory_controller_address[14] Q[15]=memory_controller_address[15] Q[16]=memory_controller_address[16] Q[17]=memory_controller_address[17] Q[18]=memory_controller_address[18] Q[19]=memory_controller_address[19] Q[20]=memory_controller_address[20] Q[21]=memory_controller_address[21] Q[22]=memory_controller_address[22] Q[23]=memory_controller_address[23] Q[24]=memory_controller_address[24] Q[25]=memory_controller_address[25] Q[26]=memory_controller_address[26] Q[27]=memory_controller_address[27] Q[28]=memory_controller_address[28] Q[29]=memory_controller_address[29] Q[30]=memory_controller_address[30] Q[31]=memory_controller_address[31]
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000100000
.subckt $dlatch D[0]=c[0] D[1]=c[1] D[2]=c[2] D[3]=c[3] D[4]=c[4] D[5]=c[5] D[6]=c[6] D[7]=c[7] D[8]=c[8] D[9]=c[9] D[10]=c[10] D[11]=c[11] D[12]=c[12] D[13]=c[13] D[14]=c[14] D[15]=c[15] D[16]=c[16] D[17]=c[17] D[18]=c[18] D[19]=c[19] D[20]=c[20] D[21]=c[21] D[22]=c[22] D[23]=c[23] D[24]=c[24] D[25]=c[25] D[26]=c[26] D[27]=c[27] D[28]=c[28] D[29]=c[29] D[30]=c[30] D[31]=c[31] EN=exitcond_$ne_A_A Q[0]=memory_controller_in[0] Q[1]=memory_controller_in[1] Q[2]=memory_controller_in[2] Q[3]=memory_controller_in[3] Q[4]=memory_controller_in[4] Q[5]=memory_controller_in[5] Q[6]=memory_controller_in[6] Q[7]=memory_controller_in[7] Q[8]=memory_controller_in[8] Q[9]=memory_controller_in[9] Q[10]=memory_controller_in[10] Q[11]=memory_controller_in[11] Q[12]=memory_controller_in[12] Q[13]=memory_controller_in[13] Q[14]=memory_controller_in[14] Q[15]=memory_controller_in[15] Q[16]=memory_controller_in[16] Q[17]=memory_controller_in[17] Q[18]=memory_controller_in[18] Q[19]=memory_controller_in[19] Q[20]=memory_controller_in[20] Q[21]=memory_controller_in[21] Q[22]=memory_controller_in[22] Q[23]=memory_controller_in[23] Q[24]=memory_controller_in[24] Q[25]=memory_controller_in[25] Q[26]=memory_controller_in[26] Q[27]=memory_controller_in[27] Q[28]=memory_controller_in[28] Q[29]=memory_controller_in[29] Q[30]=memory_controller_in[30] Q[31]=memory_controller_in[31]
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000100000
.subckt single_port_ram addr[0]=memtroll.str_address[0] clock=memtroll.clk data[0]=memtroll.str_in[0] out[0]=memtroll.str_out[0] we=memtroll.str_write_enable
.param ADDR_WIDTH 00000000000000000000000000000101
.param DATA_WIDTH 00000000000000000000000000001000
.subckt $reduce_or A[0]=memtroll.memory_controller_address[0] A[1]=memtroll.memory_controller_address[1] A[2]=memtroll.memory_controller_address[2] A[3]=memtroll.memory_controller_address[3] A[4]=memtroll.memory_controller_address[4] A[5]=memtroll.memory_controller_address[5] A[6]=memtroll.memory_controller_address[6] A[7]=memtroll.memory_controller_address[7] A[8]=memtroll.memory_controller_address[8] A[9]=memtroll.memory_controller_address[9] A[10]=memtroll.memory_controller_address[10] A[11]=memtroll.memory_controller_address[11] A[12]=memtroll.memory_controller_address[12] A[13]=memtroll.memory_controller_address[13] A[14]=memtroll.memory_controller_address[14] A[15]=memtroll.memory_controller_address[15] A[16]=memtroll.memory_controller_address[16] A[17]=memtroll.memory_controller_address[17] A[18]=memtroll.memory_controller_address[18] A[19]=memtroll.memory_controller_address[19] A[20]=memtroll.memory_controller_address[20] A[21]=memtroll.memory_controller_address[21] A[22]=memtroll.memory_controller_address[22] A[23]=memtroll.memory_controller_address[23] A[24]=memtroll.memory_controller_address[24] A[25]=memtroll.memory_controller_address[25] A[26]=memtroll.memory_controller_address[26] A[27]=memtroll.memory_controller_address[27] A[28]=memtroll.memory_controller_address[28] A[29]=memtroll.memory_controller_address[29] A[30]=memtroll.memory_controller_address[30] A[31]=memtroll.memory_controller_address[31] Y=memtroll.memory_controller_address_$reduce_or_A_1_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000100000
.param Y_WIDTH 00000000000000000000000000000001
.subckt $reduce_or A[0]=memtroll.memory_controller_in[0] A[1]=memtroll.memory_controller_in[1] A[2]=memtroll.memory_controller_in[2] A[3]=memtroll.memory_controller_in[3] A[4]=memtroll.memory_controller_in[4] A[5]=memtroll.memory_controller_in[5] A[6]=memtroll.memory_controller_in[6] A[7]=memtroll.memory_controller_in[7] A[8]=memtroll.memory_controller_in[8] A[9]=memtroll.memory_controller_in[9] A[10]=memtroll.memory_controller_in[10] A[11]=memtroll.memory_controller_in[11] A[12]=memtroll.memory_controller_in[12] A[13]=memtroll.memory_controller_in[13] A[14]=memtroll.memory_controller_in[14] A[15]=memtroll.memory_controller_in[15] A[16]=memtroll.memory_controller_in[16] A[17]=memtroll.memory_controller_in[17] A[18]=memtroll.memory_controller_in[18] A[19]=memtroll.memory_controller_in[19] A[20]=memtroll.memory_controller_in[20] A[21]=memtroll.memory_controller_in[21] A[22]=memtroll.memory_controller_in[22] A[23]=memtroll.memory_controller_in[23] A[24]=memtroll.memory_controller_in[24] A[25]=memtroll.memory_controller_in[25] A[26]=memtroll.memory_controller_in[26] A[27]=memtroll.memory_controller_in[27] A[28]=memtroll.memory_controller_in[28] A[29]=memtroll.memory_controller_in[29] A[30]=memtroll.memory_controller_in[30] A[31]=memtroll.memory_controller_in[31] Y=memtroll.memory_controller_in_$reduce_or_A_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000100000
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memtroll.memory_controller_address_$reduce_or_A_1_Y B=memtroll.memory_controller_in_$reduce_or_A_Y Y=memtroll.memory_controller_in_$reduce_or_A_Y_$and_B_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dlatch D[0]=memtroll.str_out[0] D[1]=memtroll.str_out[1] D[2]=memtroll.str_out[2] D[3]=memtroll.str_out[3] D[4]=memtroll.str_out[4] D[5]=memtroll.str_out[5] D[6]=memtroll.str_out[6] D[7]=memtroll.str_out[7] EN=memtroll.prevTag Q[0]=memtroll.memory_controller_out[0] Q[1]=memtroll.memory_controller_out[1] Q[2]=memtroll.memory_controller_out[2] Q[3]=memtroll.memory_controller_out[3] Q[4]=memtroll.memory_controller_out[4] Q[5]=memtroll.memory_controller_out[5] Q[6]=memtroll.memory_controller_out[6] Q[7]=memtroll.memory_controller_out[7]
.param EN_POLARITY 00000000000000000000000000000000
.param WIDTH 00000000000000000000000000001000
.subckt $dff CLK=memtroll.clk D=memtroll.memory_controller_in_$reduce_or_A_Y_$and_B_Y Q=memtroll.prevTag
.param CLK_POLARITY 1
.param WIDTH 00000000000000000000000000000001
.subckt $dlatch D[0]=memtroll.memory_controller_address[0] D[1]=memtroll.memory_controller_address[1] D[2]=memtroll.memory_controller_address[2] D[3]=memtroll.memory_controller_address[3] D[4]=memtroll.memory_controller_address[4] EN=memtroll.memory_controller_in_$reduce_or_A_Y_$and_B_Y Q[0]=memtroll.str_address[0] Q[1]=memtroll.str_address[1] Q[2]=memtroll.str_address[2] Q[3]=memtroll.str_address[3] Q[4]=memtroll.str_address[4]
.param EN_POLARITY 00000000000000000000000000000000
.param WIDTH 00000000000000000000000000000101
.subckt $dlatch D[0]=memtroll.memory_controller_in[0] D[1]=memtroll.memory_controller_in[1] D[2]=memtroll.memory_controller_in[2] D[3]=memtroll.memory_controller_in[3] D[4]=memtroll.memory_controller_in[4] D[5]=memtroll.memory_controller_in[5] D[6]=memtroll.memory_controller_in[6] D[7]=memtroll.memory_controller_in[7] EN=memtroll.memory_controller_in_$reduce_or_A_Y_$and_B_Y Q[0]=memtroll.str_in[0] Q[1]=memtroll.str_in[1] Q[2]=memtroll.str_in[2] Q[3]=memtroll.str_in[3] Q[4]=memtroll.str_in[4] Q[5]=memtroll.str_in[5] Q[6]=memtroll.str_in[6] Q[7]=memtroll.str_in[7]
.param EN_POLARITY 00000000000000000000000000000000
.param WIDTH 00000000000000000000000000001000
.subckt $dlatch D=memtroll.memory_controller_write_enable EN=memtroll.memory_controller_in_$reduce_or_A_Y_$and_B_Y Q=memtroll.str_write_enable
.param EN_POLARITY 00000000000000000000000000000000
.param WIDTH 00000000000000000000000000000001
.subckt $reduce_or A[0]=n[4] A[1]=n[5] A[2]=n[6] A[3]=n[7] A[4]=n[8] A[5]=n[9] A[6]=n[10] A[7]=n[11] A[8]=n[12] A[9]=n[13] A[10]=n[14] A[11]=n[15] A[12]=n[16] A[13]=n[17] A[14]=n[18] A[15]=n[19] A[16]=n[20] A[17]=n[21] A[18]=n[22] A[19]=n[23] A[20]=n[24] A[21]=n[25] A[22]=n[26] A[23]=n[27] A[24]=n[28] A[25]=n[29] A[26]=n[30] A[27]=n[31] Y=n_$reduce_or_A_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000011100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $not A=reset Y=reset_$not_A_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clk D[0]=m[0] D[1]=m[1] D[2]=m[2] D[3]=m[3] D[4]=m[4] D[5]=m[5] D[6]=m[6] D[7]=m[7] D[8]=m[8] D[9]=m[9] D[10]=m[10] D[11]=m[11] D[12]=m[12] D[13]=m[13] D[14]=m[14] D[15]=m[15] D[16]=m[16] D[17]=m[17] D[18]=m[18] D[19]=m[19] D[20]=m[20] D[21]=m[21] D[22]=m[22] D[23]=m[23] D[24]=m[24] D[25]=m[25] D[26]=m[26] D[27]=m[27] D[28]=m[28] D[29]=m[29] D[30]=m[30] D[31]=m[31] EN=return_val_$dffe_Q_EN Q[0]=return_val[0] Q[1]=return_val[1] Q[2]=return_val[2] Q[3]=return_val[3] Q[4]=return_val[4] Q[5]=return_val[5] Q[6]=return_val[6] Q[7]=return_val[7] Q[8]=return_val[8] Q[9]=return_val[9] Q[10]=return_val[10] Q[11]=return_val[11] Q[12]=return_val[12] Q[13]=return_val[13] Q[14]=return_val[14] Q[15]=return_val[15] Q[16]=return_val[16] Q[17]=return_val[17] Q[18]=return_val[18] Q[19]=return_val[19] Q[20]=return_val[20] Q[21]=return_val[21] Q[22]=return_val[22] Q[23]=return_val[23] Q[24]=return_val[24] Q[25]=return_val[25] Q[26]=return_val[26] Q[27]=return_val[27] Q[28]=return_val[28] Q[29]=return_val[29] Q[30]=return_val[30] Q[31]=return_val[31]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000100000
.subckt $reduce_and A[0]=finish_$dffe_Q_D_$pmux_Y_S A[1]=reset_$not_A_Y Y=return_val_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clk D[0]=scevgep[0] D[1]=scevgep[1] D[2]=scevgep[2] D[3]=scevgep[3] D[4]=scevgep[4] D[5]=scevgep[5] D[6]=scevgep[6] D[7]=scevgep[7] D[8]=scevgep[8] D[9]=scevgep[9] D[10]=scevgep[10] D[11]=scevgep[11] D[12]=scevgep[12] D[13]=scevgep[13] D[14]=scevgep[14] D[15]=scevgep[15] D[16]=scevgep[16] D[17]=scevgep[17] D[18]=scevgep[18] D[19]=scevgep[19] D[20]=scevgep[20] D[21]=scevgep[21] D[22]=scevgep[22] D[23]=scevgep[23] D[24]=scevgep[24] D[25]=scevgep[25] D[26]=scevgep[26] D[27]=scevgep[27] D[28]=scevgep[28] D[29]=scevgep[29] D[30]=scevgep[30] D[31]=scevgep[31] EN=s_07_$dffe_Q_EN Q[0]=s_07[0] Q[1]=s_07[1] Q[2]=s_07[2] Q[3]=s_07[3] Q[4]=s_07[4] Q[5]=s_07[5] Q[6]=s_07[6] Q[7]=s_07[7] Q[8]=s_07[8] Q[9]=s_07[9] Q[10]=s_07[10] Q[11]=s_07[11] Q[12]=s_07[12] Q[13]=s_07[13] Q[14]=s_07[14] Q[15]=s_07[15] Q[16]=s_07[16] Q[17]=s_07[17] Q[18]=s_07[18] Q[19]=s_07[19] Q[20]=s_07[20] Q[21]=s_07[21] Q[22]=s_07[22] Q[23]=s_07[23] Q[24]=s_07[24] Q[25]=s_07[25] Q[26]=s_07[26] Q[27]=s_07[27] Q[28]=s_07[28] Q[29]=s_07[29] Q[30]=s_07[30] Q[31]=s_07[31]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000100000
.subckt $reduce_and A[0]=s_07_$dffe_Q_EN_$reduce_and_Y_A A[1]=reset_$not_A_Y Y=s_07_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$false B[1]=$false B[2]=$true B[3]=$true Y=s_07_$dffe_Q_EN_$reduce_and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clk D[0]=m_$and_A_Y[0] D[1]=m_$and_A_Y[1] D[2]=m_$and_A_Y[2] D[3]=m_$and_A_Y[3] D[4]=m_$and_A_Y[4] D[5]=m_$and_A_Y[5] D[6]=m_$and_A_Y[6] D[7]=m_$and_A_Y[7] D[8]=m_$and_A_Y[8] D[9]=m_$and_A_Y[9] D[10]=m_$and_A_Y[10] D[11]=m_$and_A_Y[11] D[12]=m_$and_A_Y[12] D[13]=m_$and_A_Y[13] D[14]=m_$and_A_Y[14] D[15]=m_$and_A_Y[15] D[16]=m_$and_A_Y[16] D[17]=m_$and_A_Y[17] D[18]=m_$and_A_Y[18] D[19]=m_$and_A_Y[19] D[20]=m_$and_A_Y[20] D[21]=m_$and_A_Y[21] D[22]=m_$and_A_Y[22] D[23]=m_$and_A_Y[23] D[24]=m_$and_A_Y[24] D[25]=m_$and_A_Y[25] D[26]=m_$and_A_Y[26] D[27]=m_$and_A_Y[27] D[28]=m_$and_A_Y[28] D[29]=m_$and_A_Y[29] D[30]=m_$and_A_Y[30] D[31]=m_$and_A_Y[31] EN=scevgep_$dffe_Q_EN Q[0]=scevgep[0] Q[1]=scevgep[1] Q[2]=scevgep[2] Q[3]=scevgep[3] Q[4]=scevgep[4] Q[5]=scevgep[5] Q[6]=scevgep[6] Q[7]=scevgep[7] Q[8]=scevgep[8] Q[9]=scevgep[9] Q[10]=scevgep[10] Q[11]=scevgep[11] Q[12]=scevgep[12] Q[13]=scevgep[13] Q[14]=scevgep[14] Q[15]=scevgep[15] Q[16]=scevgep[16] Q[17]=scevgep[17] Q[18]=scevgep[18] Q[19]=scevgep[19] Q[20]=scevgep[20] Q[21]=scevgep[21] Q[22]=scevgep[22] Q[23]=scevgep[23] Q[24]=scevgep[24] Q[25]=scevgep[25] Q[26]=scevgep[26] Q[27]=scevgep[27] Q[28]=scevgep[28] Q[29]=scevgep[29] Q[30]=scevgep[30] Q[31]=scevgep[31]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000100000
.subckt $reduce_and A[0]=cur_state_$sdffe_Q_EN_$reduce_bool_Y_A_8 A[1]=reset_$not_A_Y Y=scevgep_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=$false A[1]=$false A[2]=$false A[3]=$false B[0]=$true B[1]=$false B[2]=$false B[3]=$false S=start Y[0]=start_$mux_S_Y[0] Y[1]=start_$mux_S_Y[1] Y[2]=start_$mux_S_Y[2] Y[3]=start_$mux_S_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clk D[0]=n[0] D[1]=n[1] D[2]=n[2] D[3]=n[3] D[4]=n[4] D[5]=n[5] D[6]=n[6] D[7]=n[7] D[8]=n[8] D[9]=n[9] D[10]=n[10] D[11]=n[11] D[12]=n[12] D[13]=n[13] D[14]=n[14] D[15]=n[15] D[16]=n[16] D[17]=n[17] D[18]=n[18] D[19]=n[19] D[20]=n[20] D[21]=n[21] D[22]=n[22] D[23]=n[23] D[24]=n[24] D[25]=n[25] D[26]=n[26] D[27]=n[27] D[28]=n[28] D[29]=n[29] D[30]=n[30] D[31]=n[31] EN=tmp_$dffe_Q_EN Q[0]=tmp[0] Q[1]=tmp[1] Q[2]=tmp[2] Q[3]=tmp[3] Q[4]=tmp[4] Q[5]=tmp[5] Q[6]=tmp[6] Q[7]=tmp[7] Q[8]=tmp[8] Q[9]=tmp[9] Q[10]=tmp[10] Q[11]=tmp[11] Q[12]=tmp[12] Q[13]=tmp[13] Q[14]=tmp[14] Q[15]=tmp[15] Q[16]=tmp[16] Q[17]=tmp[17] Q[18]=tmp[18] Q[19]=tmp[19] Q[20]=tmp[20] Q[21]=tmp[21] Q[22]=tmp[22] Q[23]=tmp[23] Q[24]=tmp[24] Q[25]=tmp[25] Q[26]=tmp[26] Q[27]=tmp[27] Q[28]=tmp[28] Q[29]=tmp[29] Q[30]=tmp[30] Q[31]=tmp[31]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000100000
.subckt $reduce_and A[0]=tmp_$dffe_Q_EN_$reduce_and_Y_A A[1]=reset_$not_A_Y Y=tmp_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$false B[1]=$false B[2]=$false B[3]=$true Y=tmp_$dffe_Q_EN_$reduce_and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $pmux A[0]=$undef A[1]=$undef A[2]=$undef A[3]=$undef A[4]=$undef A[5]=$undef A[6]=$undef A[7]=$undef A[8]=$undef A[9]=$undef A[10]=$undef A[11]=$undef A[12]=$undef A[13]=$undef A[14]=$undef A[15]=$undef A[16]=$undef A[17]=$undef A[18]=$undef A[19]=$undef A[20]=$undef A[21]=$undef A[22]=$undef A[23]=$undef A[24]=$undef A[25]=$undef A[26]=$undef A[27]=$undef A[28]=$undef A[29]=$undef A[30]=$undef A[31]=$undef B[0]=exitcond_$mux_S_1_Y[0] B[1]=exitcond_$mux_S_1_Y[1] B[2]=exitcond_$mux_S_1_Y[2] B[3]=exitcond_$mux_S_1_Y[3] B[4]=exitcond_$mux_S_1_Y[4] B[5]=exitcond_$mux_S_1_Y[5] B[6]=exitcond_$mux_S_1_Y[6] B[7]=exitcond_$mux_S_1_Y[7] B[8]=exitcond_$mux_S_1_Y[8] B[9]=exitcond_$mux_S_1_Y[9] B[10]=exitcond_$mux_S_1_Y[10] B[11]=exitcond_$mux_S_1_Y[11] B[12]=exitcond_$mux_S_1_Y[12] B[13]=exitcond_$mux_S_1_Y[13] B[14]=exitcond_$mux_S_1_Y[14] B[15]=exitcond_$mux_S_1_Y[15] B[16]=exitcond_$mux_S_1_Y[16] B[17]=exitcond_$mux_S_1_Y[17] B[18]=exitcond_$mux_S_1_Y[18] B[19]=exitcond_$mux_S_1_Y[19] B[20]=exitcond_$mux_S_1_Y[20] B[21]=exitcond_$mux_S_1_Y[21] B[22]=exitcond_$mux_S_1_Y[22] B[23]=exitcond_$mux_S_1_Y[23] B[24]=exitcond_$mux_S_1_Y[24] B[25]=exitcond_$mux_S_1_Y[25] B[26]=exitcond_$mux_S_1_Y[26] B[27]=exitcond_$mux_S_1_Y[27] B[28]=exitcond_$mux_S_1_Y[28] B[29]=exitcond_$mux_S_1_Y[29] B[30]=exitcond_$mux_S_1_Y[30] B[31]=exitcond_$mux_S_1_Y[31] B[32]=$false B[33]=$false B[34]=$false B[35]=$false B[36]=$false B[37]=$false B[38]=$false B[39]=$false B[40]=$false B[41]=$false B[42]=$false B[43]=$false B[44]=$false B[45]=$false B[46]=$false B[47]=$false B[48]=$false B[49]=$false B[50]=$false B[51]=$false B[52]=$false B[53]=$false B[54]=$false B[55]=$false B[56]=$false B[57]=$false B[58]=$false B[59]=$false B[60]=$false B[61]=$false B[62]=$false B[63]=$false S[0]=exitcond_$ne_A_A S[1]=tmp_$dffe_Q_EN_$reduce_and_Y_A Y[0]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[0] Y[1]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[1] Y[2]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[2] Y[3]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[3] Y[4]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[4] Y[5]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[5] Y[6]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[6] Y[7]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[7] Y[8]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[8] Y[9]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[9] Y[10]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[10] Y[11]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[11] Y[12]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[12] Y[13]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[13] Y[14]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[14] Y[15]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[15] Y[16]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[16] Y[17]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[17] Y[18]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[18] Y[19]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[19] Y[20]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[20] Y[21]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[21] Y[22]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[22] Y[23]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[23] Y[24]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[24] Y[25]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[25] Y[26]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[26] Y[27]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[27] Y[28]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[28] Y[29]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[29] Y[30]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[30] Y[31]=tmp_$dffe_Q_EN_$reduce_and_Y_A_$pmux_S_Y[31]
.param S_WIDTH 00000000000000000000000000000010
.param WIDTH 00000000000000000000000000100000
.subckt $eq A[0]=indvar_next[0] A[1]=indvar_next[1] A[2]=indvar_next[2] A[3]=indvar_next[3] A[4]=indvar_next[4] A[5]=indvar_next[5] A[6]=indvar_next[6] A[7]=indvar_next[7] A[8]=indvar_next[8] A[9]=indvar_next[9] A[10]=indvar_next[10] A[11]=indvar_next[11] A[12]=indvar_next[12] A[13]=indvar_next[13] A[14]=indvar_next[14] A[15]=indvar_next[15] A[16]=indvar_next[16] A[17]=indvar_next[17] A[18]=indvar_next[18] A[19]=indvar_next[19] A[20]=indvar_next[20] A[21]=indvar_next[21] A[22]=indvar_next[22] A[23]=indvar_next[23] A[24]=indvar_next[24] A[25]=indvar_next[25] A[26]=indvar_next[26] A[27]=indvar_next[27] A[28]=indvar_next[28] A[29]=indvar_next[29] A[30]=indvar_next[30] A[31]=indvar_next[31] B[0]=tmp[0] B[1]=tmp[1] B[2]=tmp[2] B[3]=tmp[3] B[4]=tmp[4] B[5]=tmp[5] B[6]=tmp[6] B[7]=tmp[7] B[8]=tmp[8] B[9]=tmp[9] B[10]=tmp[10] B[11]=tmp[11] B[12]=tmp[12] B[13]=tmp[13] B[14]=tmp[14] B[15]=tmp[15] B[16]=tmp[16] B[17]=tmp[17] B[18]=tmp[18] B[19]=tmp[19] B[20]=tmp[20] B[21]=tmp[21] B[22]=tmp[22] B[23]=tmp[23] B[24]=tmp[24] B[25]=tmp[25] B[26]=tmp[26] B[27]=tmp[27] B[28]=tmp[28] B[29]=tmp[29] B[30]=tmp[30] B[31]=tmp[31] Y=tmp_$eq_B_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000100000
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000100000
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clk D=n_$reduce_or_A_Y EN=var2_$dffe_Q_EN Q=var2
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000001
.subckt $reduce_and A[0]=var2_$dffe_Q_EN_$reduce_and_Y_A A[1]=reset_$not_A_Y Y=var2_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $eq A[0]=cur_state[0] A[1]=cur_state[1] A[2]=cur_state[2] A[3]=cur_state[3] B[0]=$false B[1]=$true B[2]=$true B[3]=$false Y=var2_$dffe_Q_EN_$reduce_and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=$false A[1]=$false A[2]=$false A[3]=$true B[0]=$false B[1]=$true B[2]=$true B[3]=$true S=var2 Y[0]=var2_$mux_S_Y[0] Y[1]=var2_$mux_S_Y[1] Y[2]=var2_$mux_S_Y[2] Y[3]=var2_$mux_S_Y[3]
.param WIDTH 00000000000000000000000000000100
.names $true memory_controller_write_enable
1 1
.names start start_$eq_A_Y
1 1
.names indvar_next[0] tmp8[0]
1 1
.names indvar_next[1] tmp8[1]
1 1
.names indvar_next[2] tmp8[2]
1 1
.names indvar_next[3] tmp8[3]
1 1
.names indvar_next[4] tmp8[4]
1 1
.names indvar_next[5] tmp8[5]
1 1
.names indvar_next[6] tmp8[6]
1 1
.names indvar_next[7] tmp8[7]
1 1
.names indvar_next[8] tmp8[8]
1 1
.names indvar_next[9] tmp8[9]
1 1
.names indvar_next[10] tmp8[10]
1 1
.names indvar_next[11] tmp8[11]
1 1
.names indvar_next[12] tmp8[12]
1 1
.names indvar_next[13] tmp8[13]
1 1
.names indvar_next[14] tmp8[14]
1 1
.names indvar_next[15] tmp8[15]
1 1
.names indvar_next[16] tmp8[16]
1 1
.names indvar_next[17] tmp8[17]
1 1
.names indvar_next[18] tmp8[18]
1 1
.names indvar_next[19] tmp8[19]
1 1
.names indvar_next[20] tmp8[20]
1 1
.names indvar_next[21] tmp8[21]
1 1
.names indvar_next[22] tmp8[22]
1 1
.names indvar_next[23] tmp8[23]
1 1
.names indvar_next[24] tmp8[24]
1 1
.names indvar_next[25] tmp8[25]
1 1
.names indvar_next[26] tmp8[26]
1 1
.names indvar_next[27] tmp8[27]
1 1
.names indvar_next[28] tmp8[28]
1 1
.names indvar_next[29] tmp8[29]
1 1
.names indvar_next[30] tmp8[30]
1 1
.names indvar_next[31] tmp8[31]
1 1
.names $false var1
1 1
.names $false var1_$reduce_or_A_Y
1 1
.names var2 var2_$reduce_or_A_Y
1 1
.names memtroll.memory_controller_address_$reduce_or_A_1_Y memtroll.memory_controller_address_$reduce_or_A_Y
1 1
.names memtroll.memory_controller_address_$reduce_or_A_1_Y memtroll.memory_controller_address_$reduce_or_A_Y_$and_A_Y
1 1
.names $false memtroll.memory_controller_out[8]
1 1
.names $false memtroll.memory_controller_out[9]
1 1
.names $false memtroll.memory_controller_out[10]
1 1
.names $false memtroll.memory_controller_out[11]
1 1
.names $false memtroll.memory_controller_out[12]
1 1
.names $false memtroll.memory_controller_out[13]
1 1
.names $false memtroll.memory_controller_out[14]
1 1
.names $false memtroll.memory_controller_out[15]
1 1
.names $false memtroll.memory_controller_out[16]
1 1
.names $false memtroll.memory_controller_out[17]
1 1
.names $false memtroll.memory_controller_out[18]
1 1
.names $false memtroll.memory_controller_out[19]
1 1
.names $false memtroll.memory_controller_out[20]
1 1
.names $false memtroll.memory_controller_out[21]
1 1
.names $false memtroll.memory_controller_out[22]
1 1
.names $false memtroll.memory_controller_out[23]
1 1
.names $false memtroll.memory_controller_out[24]
1 1
.names $false memtroll.memory_controller_out[25]
1 1
.names $false memtroll.memory_controller_out[26]
1 1
.names $false memtroll.memory_controller_out[27]
1 1
.names $false memtroll.memory_controller_out[28]
1 1
.names $false memtroll.memory_controller_out[29]
1 1
.names $false memtroll.memory_controller_out[30]
1 1
.names $false memtroll.memory_controller_out[31]
1 1
.names memtroll.memory_controller_in_$reduce_or_A_Y_$and_B_Y memtroll.tag
1 1
.names clk memtroll.clk
1 1
.names memory_controller_address[0] memtroll.memory_controller_address[0]
1 1
.names memory_controller_address[1] memtroll.memory_controller_address[1]
1 1
.names memory_controller_address[2] memtroll.memory_controller_address[2]
1 1
.names memory_controller_address[3] memtroll.memory_controller_address[3]
1 1
.names memory_controller_address[4] memtroll.memory_controller_address[4]
1 1
.names memory_controller_address[5] memtroll.memory_controller_address[5]
1 1
.names memory_controller_address[6] memtroll.memory_controller_address[6]
1 1
.names memory_controller_address[7] memtroll.memory_controller_address[7]
1 1
.names memory_controller_address[8] memtroll.memory_controller_address[8]
1 1
.names memory_controller_address[9] memtroll.memory_controller_address[9]
1 1
.names memory_controller_address[10] memtroll.memory_controller_address[10]
1 1
.names memory_controller_address[11] memtroll.memory_controller_address[11]
1 1
.names memory_controller_address[12] memtroll.memory_controller_address[12]
1 1
.names memory_controller_address[13] memtroll.memory_controller_address[13]
1 1
.names memory_controller_address[14] memtroll.memory_controller_address[14]
1 1
.names memory_controller_address[15] memtroll.memory_controller_address[15]
1 1
.names memory_controller_address[16] memtroll.memory_controller_address[16]
1 1
.names memory_controller_address[17] memtroll.memory_controller_address[17]
1 1
.names memory_controller_address[18] memtroll.memory_controller_address[18]
1 1
.names memory_controller_address[19] memtroll.memory_controller_address[19]
1 1
.names memory_controller_address[20] memtroll.memory_controller_address[20]
1 1
.names memory_controller_address[21] memtroll.memory_controller_address[21]
1 1
.names memory_controller_address[22] memtroll.memory_controller_address[22]
1 1
.names memory_controller_address[23] memtroll.memory_controller_address[23]
1 1
.names memory_controller_address[24] memtroll.memory_controller_address[24]
1 1
.names memory_controller_address[25] memtroll.memory_controller_address[25]
1 1
.names memory_controller_address[26] memtroll.memory_controller_address[26]
1 1
.names memory_controller_address[27] memtroll.memory_controller_address[27]
1 1
.names memory_controller_address[28] memtroll.memory_controller_address[28]
1 1
.names memory_controller_address[29] memtroll.memory_controller_address[29]
1 1
.names memory_controller_address[30] memtroll.memory_controller_address[30]
1 1
.names memory_controller_address[31] memtroll.memory_controller_address[31]
1 1
.names memory_controller_in[0] memtroll.memory_controller_in[0]
1 1
.names memory_controller_in[1] memtroll.memory_controller_in[1]
1 1
.names memory_controller_in[2] memtroll.memory_controller_in[2]
1 1
.names memory_controller_in[3] memtroll.memory_controller_in[3]
1 1
.names memory_controller_in[4] memtroll.memory_controller_in[4]
1 1
.names memory_controller_in[5] memtroll.memory_controller_in[5]
1 1
.names memory_controller_in[6] memtroll.memory_controller_in[6]
1 1
.names memory_controller_in[7] memtroll.memory_controller_in[7]
1 1
.names memory_controller_in[8] memtroll.memory_controller_in[8]
1 1
.names memory_controller_in[9] memtroll.memory_controller_in[9]
1 1
.names memory_controller_in[10] memtroll.memory_controller_in[10]
1 1
.names memory_controller_in[11] memtroll.memory_controller_in[11]
1 1
.names memory_controller_in[12] memtroll.memory_controller_in[12]
1 1
.names memory_controller_in[13] memtroll.memory_controller_in[13]
1 1
.names memory_controller_in[14] memtroll.memory_controller_in[14]
1 1
.names memory_controller_in[15] memtroll.memory_controller_in[15]
1 1
.names memory_controller_in[16] memtroll.memory_controller_in[16]
1 1
.names memory_controller_in[17] memtroll.memory_controller_in[17]
1 1
.names memory_controller_in[18] memtroll.memory_controller_in[18]
1 1
.names memory_controller_in[19] memtroll.memory_controller_in[19]
1 1
.names memory_controller_in[20] memtroll.memory_controller_in[20]
1 1
.names memory_controller_in[21] memtroll.memory_controller_in[21]
1 1
.names memory_controller_in[22] memtroll.memory_controller_in[22]
1 1
.names memory_controller_in[23] memtroll.memory_controller_in[23]
1 1
.names memory_controller_in[24] memtroll.memory_controller_in[24]
1 1
.names memory_controller_in[25] memtroll.memory_controller_in[25]
1 1
.names memory_controller_in[26] memtroll.memory_controller_in[26]
1 1
.names memory_controller_in[27] memtroll.memory_controller_in[27]
1 1
.names memory_controller_in[28] memtroll.memory_controller_in[28]
1 1
.names memory_controller_in[29] memtroll.memory_controller_in[29]
1 1
.names memory_controller_in[30] memtroll.memory_controller_in[30]
1 1
.names memory_controller_in[31] memtroll.memory_controller_in[31]
1 1
.names memtroll.memory_controller_out[0] memory_controller_out[0]
1 1
.names memtroll.memory_controller_out[1] memory_controller_out[1]
1 1
.names memtroll.memory_controller_out[2] memory_controller_out[2]
1 1
.names memtroll.memory_controller_out[3] memory_controller_out[3]
1 1
.names memtroll.memory_controller_out[4] memory_controller_out[4]
1 1
.names memtroll.memory_controller_out[5] memory_controller_out[5]
1 1
.names memtroll.memory_controller_out[6] memory_controller_out[6]
1 1
.names memtroll.memory_controller_out[7] memory_controller_out[7]
1 1
.names memtroll.memory_controller_out[8] memory_controller_out[8]
1 1
.names memtroll.memory_controller_out[9] memory_controller_out[9]
1 1
.names memtroll.memory_controller_out[10] memory_controller_out[10]
1 1
.names memtroll.memory_controller_out[11] memory_controller_out[11]
1 1
.names memtroll.memory_controller_out[12] memory_controller_out[12]
1 1
.names memtroll.memory_controller_out[13] memory_controller_out[13]
1 1
.names memtroll.memory_controller_out[14] memory_controller_out[14]
1 1
.names memtroll.memory_controller_out[15] memory_controller_out[15]
1 1
.names memtroll.memory_controller_out[16] memory_controller_out[16]
1 1
.names memtroll.memory_controller_out[17] memory_controller_out[17]
1 1
.names memtroll.memory_controller_out[18] memory_controller_out[18]
1 1
.names memtroll.memory_controller_out[19] memory_controller_out[19]
1 1
.names memtroll.memory_controller_out[20] memory_controller_out[20]
1 1
.names memtroll.memory_controller_out[21] memory_controller_out[21]
1 1
.names memtroll.memory_controller_out[22] memory_controller_out[22]
1 1
.names memtroll.memory_controller_out[23] memory_controller_out[23]
1 1
.names memtroll.memory_controller_out[24] memory_controller_out[24]
1 1
.names memtroll.memory_controller_out[25] memory_controller_out[25]
1 1
.names memtroll.memory_controller_out[26] memory_controller_out[26]
1 1
.names memtroll.memory_controller_out[27] memory_controller_out[27]
1 1
.names memtroll.memory_controller_out[28] memory_controller_out[28]
1 1
.names memtroll.memory_controller_out[29] memory_controller_out[29]
1 1
.names memtroll.memory_controller_out[30] memory_controller_out[30]
1 1
.names memtroll.memory_controller_out[31] memory_controller_out[31]
1 1
.names $true memtroll.memory_controller_write_enable
1 1
.end
