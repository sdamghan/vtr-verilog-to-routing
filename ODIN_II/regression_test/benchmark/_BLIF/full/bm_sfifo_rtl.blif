# Generated by Yosys 0.9+4008 (git sha1 1af99480, clang 10.0.0-4ubuntu1 -fPIC -Os)

.model bm_sfifo_rtl
.inputs clock reset_n data_in[0] data_in[1] data_in[2] data_in[3] data_in[4] data_in[5] data_in[6] data_in[7] read_n write_n
.outputs data_out[0] data_out[1] data_out[2] data_out[3] data_out[4] data_out[5] data_out[6] data_out[7] full empty half
.subckt $add A[0]=counter[0] A[1]=counter[1] A[2]=counter[2] A[3]=counter[3] B[0]=$true B[1]=$false B[2]=$false B[3]=$false B[4]=$false B[5]=$false B[6]=$false B[7]=$false B[8]=$false B[9]=$false B[10]=$false B[11]=$false B[12]=$false B[13]=$false B[14]=$false B[15]=$false B[16]=$false B[17]=$false B[18]=$false B[19]=$false B[20]=$false B[21]=$false B[22]=$false B[23]=$false B[24]=$false B[25]=$false B[26]=$false B[27]=$false B[28]=$false B[29]=$false B[30]=$false B[31]=$false Y[0]=counter_$add_A_Y[0] Y[1]=counter_$add_A_Y[1] Y[2]=counter_$add_A_Y[2] Y[3]=counter_$add_A_Y[3] Y[4]=counter_$add_A_Y[4] Y[5]=counter_$add_A_Y[5] Y[6]=counter_$add_A_Y[6] Y[7]=counter_$add_A_Y[7] Y[8]=counter_$add_A_Y[8] Y[9]=counter_$add_A_Y[9] Y[10]=counter_$add_A_Y[10] Y[11]=counter_$add_A_Y[11] Y[12]=counter_$add_A_Y[12] Y[13]=counter_$add_A_Y[13] Y[14]=counter_$add_A_Y[14] Y[15]=counter_$add_A_Y[15] Y[16]=counter_$add_A_Y[16] Y[17]=counter_$add_A_Y[17] Y[18]=counter_$add_A_Y[18] Y[19]=counter_$add_A_Y[19] Y[20]=counter_$add_A_Y[20] Y[21]=counter_$add_A_Y[21] Y[22]=counter_$add_A_Y[22] Y[23]=counter_$add_A_Y[23] Y[24]=counter_$add_A_Y[24] Y[25]=counter_$add_A_Y[25] Y[26]=counter_$add_A_Y[26] Y[27]=counter_$add_A_Y[27] Y[28]=counter_$add_A_Y[28] Y[29]=counter_$add_A_Y[29] Y[30]=counter_$add_A_Y[30] Y[31]=counter_$add_A_Y[31]
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000100000
.param Y_WIDTH 00000000000000000000000000100000
.subckt $eq A[0]=counter[0] A[1]=counter[1] A[2]=counter[2] A[3]=counter[3] B[0]=$true B[1]=$true B[2]=$true B[3]=$true Y=counter_$eq_A_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $logic_not A[0]=counter[0] A[1]=counter[1] A[2]=counter[2] A[3]=counter[3] Y=counter_$eq_A_1_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A=$false B=$true S=counter_$eq_A_1_Y Y=counter_$eq_A_1_Y_$mux_S_Y
.param WIDTH 00000000000000000000000000000001
.subckt $mux A=$false B=$true S=counter_$eq_A_Y Y=counter_$eq_A_Y_$mux_S_Y
.param WIDTH 00000000000000000000000000000001
.subckt $ge A[0]=counter[0] A[1]=counter[1] A[2]=counter[2] A[3]=counter[3] B[0]=$false B[1]=$false B[2]=$false B[3]=$true B[4]=$false B[5]=$false B[6]=$false B[7]=$false B[8]=$false B[9]=$false B[10]=$false B[11]=$false B[12]=$false B[13]=$false B[14]=$false B[15]=$false B[16]=$false B[17]=$false B[18]=$false B[19]=$false B[20]=$false B[21]=$false B[22]=$false B[23]=$false B[24]=$false B[25]=$false B[26]=$false B[27]=$false B[28]=$false B[29]=$false B[30]=$false B[31]=$false Y=counter_$ge_A_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000100000
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A=$false B=$true S=counter_$ge_A_Y Y=counter_$ge_A_Y_$mux_S_Y
.param WIDTH 00000000000000000000000000000001
.subckt $sdffe CLK=clock D[0]=write_n_$logic_and_B_Y_$mux_S_Y[0] D[1]=write_n_$logic_and_B_Y_$mux_S_Y[1] D[2]=write_n_$logic_and_B_Y_$mux_S_Y[2] D[3]=write_n_$logic_and_B_Y_$mux_S_Y[3] EN=counter_$sdffe_Q_EN Q[0]=counter[0] Q[1]=counter[1] Q[2]=counter[2] Q[3]=counter[3] SRST=reset_n
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param SRST_POLARITY 00000000000000000000000000000000
.param SRST_VALUE 0000
.param WIDTH 00000000000000000000000000000100
.subckt $sub A[0]=counter[0] A[1]=counter[1] A[2]=counter[2] A[3]=counter[3] B[0]=$true B[1]=$false B[2]=$false B[3]=$false B[4]=$false B[5]=$false B[6]=$false B[7]=$false B[8]=$false B[9]=$false B[10]=$false B[11]=$false B[12]=$false B[13]=$false B[14]=$false B[15]=$false B[16]=$false B[17]=$false B[18]=$false B[19]=$false B[20]=$false B[21]=$false B[22]=$false B[23]=$false B[24]=$false B[25]=$false B[26]=$false B[27]=$false B[28]=$false B[29]=$false B[30]=$false B[31]=$false Y[0]=counter_$sub_A_Y[0] Y[1]=counter_$sub_A_Y[1] Y[2]=counter_$sub_A_Y[2] Y[3]=counter_$sub_A_Y[3] Y[4]=counter_$sub_A_Y[4] Y[5]=counter_$sub_A_Y[5] Y[6]=counter_$sub_A_Y[6] Y[7]=counter_$sub_A_Y[7] Y[8]=counter_$sub_A_Y[8] Y[9]=counter_$sub_A_Y[9] Y[10]=counter_$sub_A_Y[10] Y[11]=counter_$sub_A_Y[11] Y[12]=counter_$sub_A_Y[12] Y[13]=counter_$sub_A_Y[13] Y[14]=counter_$sub_A_Y[14] Y[15]=counter_$sub_A_Y[15] Y[16]=counter_$sub_A_Y[16] Y[17]=counter_$sub_A_Y[17] Y[18]=counter_$sub_A_Y[18] Y[19]=counter_$sub_A_Y[19] Y[20]=counter_$sub_A_Y[20] Y[21]=counter_$sub_A_Y[21] Y[22]=counter_$sub_A_Y[22] Y[23]=counter_$sub_A_Y[23] Y[24]=counter_$sub_A_Y[24] Y[25]=counter_$sub_A_Y[25] Y[26]=counter_$sub_A_Y[26] Y[27]=counter_$sub_A_Y[27] Y[28]=counter_$sub_A_Y[28] Y[29]=counter_$sub_A_Y[29] Y[30]=counter_$sub_A_Y[30] Y[31]=counter_$sub_A_Y[31]
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000100000
.param Y_WIDTH 00000000000000000000000000100000
.subckt $dffe CLK=clock D[0]=rd_pointer_$memrd_ADDR_DATA[0] D[1]=rd_pointer_$memrd_ADDR_DATA[1] D[2]=rd_pointer_$memrd_ADDR_DATA[2] D[3]=rd_pointer_$memrd_ADDR_DATA[3] D[4]=rd_pointer_$memrd_ADDR_DATA[4] D[5]=rd_pointer_$memrd_ADDR_DATA[5] D[6]=rd_pointer_$memrd_ADDR_DATA[6] D[7]=rd_pointer_$memrd_ADDR_DATA[7] EN=read_n Q[0]=data_out[0] Q[1]=data_out[1] Q[2]=data_out[2] Q[3]=data_out[3] Q[4]=data_out[4] Q[5]=data_out[5] Q[6]=data_out[6] Q[7]=data_out[7]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000000
.param WIDTH 00000000000000000000000000001000
.subckt $mem RD_ADDR[0]=rd_pointer[0] RD_ADDR[1]=rd_pointer[1] RD_ADDR[2]=rd_pointer[2] RD_ADDR[3]=rd_pointer[3] RD_CLK=$undef RD_DATA[0]=rd_pointer_$memrd_ADDR_DATA[0] RD_DATA[1]=rd_pointer_$memrd_ADDR_DATA[1] RD_DATA[2]=rd_pointer_$memrd_ADDR_DATA[2] RD_DATA[3]=rd_pointer_$memrd_ADDR_DATA[3] RD_DATA[4]=rd_pointer_$memrd_ADDR_DATA[4] RD_DATA[5]=rd_pointer_$memrd_ADDR_DATA[5] RD_DATA[6]=rd_pointer_$memrd_ADDR_DATA[6] RD_DATA[7]=rd_pointer_$memrd_ADDR_DATA[7] RD_EN=$undef
.param ABITS 00000000000000000000000000000100
.param INIT xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.param MEMID "\\fifo_mem"
.param OFFSET 00000000000000000000000000000000
.param RD_CLK_ENABLE 0
.param RD_CLK_POLARITY 0
.param RD_PORTS 00000000000000000000000000000001
.param RD_TRANSPARENT 0
.param SIZE 00000000000000000000000000001111
.param WIDTH 00000000000000000000000000001000
.param WR_CLK_ENABLE 0
.param WR_CLK_POLARITY 0
.param WR_PORTS 00000000000000000000000000000000
.subckt $add A[0]=rd_pointer[0] A[1]=rd_pointer[1] A[2]=rd_pointer[2] A[3]=rd_pointer[3] B[0]=$true B[1]=$false B[2]=$false B[3]=$false B[4]=$false B[5]=$false B[6]=$false B[7]=$false B[8]=$false B[9]=$false B[10]=$false B[11]=$false B[12]=$false B[13]=$false B[14]=$false B[15]=$false B[16]=$false B[17]=$false B[18]=$false B[19]=$false B[20]=$false B[21]=$false B[22]=$false B[23]=$false B[24]=$false B[25]=$false B[26]=$false B[27]=$false B[28]=$false B[29]=$false B[30]=$false B[31]=$false Y[0]=rd_pointer_$add_A_Y[0] Y[1]=rd_pointer_$add_A_Y[1] Y[2]=rd_pointer_$add_A_Y[2] Y[3]=rd_pointer_$add_A_Y[3] Y[4]=rd_pointer_$add_A_Y[4] Y[5]=rd_pointer_$add_A_Y[5] Y[6]=rd_pointer_$add_A_Y[6] Y[7]=rd_pointer_$add_A_Y[7] Y[8]=rd_pointer_$add_A_Y[8] Y[9]=rd_pointer_$add_A_Y[9] Y[10]=rd_pointer_$add_A_Y[10] Y[11]=rd_pointer_$add_A_Y[11] Y[12]=rd_pointer_$add_A_Y[12] Y[13]=rd_pointer_$add_A_Y[13] Y[14]=rd_pointer_$add_A_Y[14] Y[15]=rd_pointer_$add_A_Y[15] Y[16]=rd_pointer_$add_A_Y[16] Y[17]=rd_pointer_$add_A_Y[17] Y[18]=rd_pointer_$add_A_Y[18] Y[19]=rd_pointer_$add_A_Y[19] Y[20]=rd_pointer_$add_A_Y[20] Y[21]=rd_pointer_$add_A_Y[21] Y[22]=rd_pointer_$add_A_Y[22] Y[23]=rd_pointer_$add_A_Y[23] Y[24]=rd_pointer_$add_A_Y[24] Y[25]=rd_pointer_$add_A_Y[25] Y[26]=rd_pointer_$add_A_Y[26] Y[27]=rd_pointer_$add_A_Y[27] Y[28]=rd_pointer_$add_A_Y[28] Y[29]=rd_pointer_$add_A_Y[29] Y[30]=rd_pointer_$add_A_Y[30] Y[31]=rd_pointer_$add_A_Y[31]
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000100000
.param Y_WIDTH 00000000000000000000000000100000
.subckt $eq A[0]=rd_pointer[0] A[1]=rd_pointer[1] A[2]=rd_pointer[2] A[3]=rd_pointer[3] B[0]=$false B[1]=$true B[2]=$true B[3]=$true Y=rd_pointer_$eq_A_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=rd_pointer_$add_A_Y[0] A[1]=rd_pointer_$add_A_Y[1] A[2]=rd_pointer_$add_A_Y[2] A[3]=rd_pointer_$add_A_Y[3] B[0]=$false B[1]=$false B[2]=$false B[3]=$false S=rd_pointer_$eq_A_Y Y[0]=rd_pointer_$eq_A_Y_$mux_S_Y[0] Y[1]=rd_pointer_$eq_A_Y_$mux_S_Y[1] Y[2]=rd_pointer_$eq_A_Y_$mux_S_Y[2] Y[3]=rd_pointer_$eq_A_Y_$mux_S_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $sdffe CLK=clock D[0]=rd_pointer_$eq_A_Y_$mux_S_Y[0] D[1]=rd_pointer_$eq_A_Y_$mux_S_Y[1] D[2]=rd_pointer_$eq_A_Y_$mux_S_Y[2] D[3]=rd_pointer_$eq_A_Y_$mux_S_Y[3] EN=read_n Q[0]=rd_pointer[0] Q[1]=rd_pointer[1] Q[2]=rd_pointer[2] Q[3]=rd_pointer[3] SRST=reset_n
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000000
.param SRST_POLARITY 00000000000000000000000000000000
.param SRST_VALUE 0000
.param WIDTH 00000000000000000000000000000100
.subckt $logic_and A=write_n_$not_A_1_Y B=read_n Y=read_n_$logic_and_B_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=$undef A[1]=$undef A[2]=$undef A[3]=$undef B[0]=counter_$add_A_Y[0] B[1]=counter_$add_A_Y[1] B[2]=counter_$add_A_Y[2] B[3]=counter_$add_A_Y[3] S=read_n_$logic_and_B_Y Y[0]=read_n_$logic_and_B_Y_$mux_S_Y[0] Y[1]=read_n_$logic_and_B_Y_$mux_S_Y[1] Y[2]=read_n_$logic_and_B_Y_$mux_S_Y[2] Y[3]=read_n_$logic_and_B_Y_$mux_S_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $reduce_bool A[0]=write_n_$logic_and_B_Y A[1]=read_n_$logic_and_B_Y Y=counter_$sdffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000010
.param Y_WIDTH 00000000000000000000000000000001
.subckt $not A=read_n Y=read_n_$not_A_1_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $logic_and A=read_n_$not_A_1_Y B=write_n Y=write_n_$logic_and_B_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=read_n_$logic_and_B_Y_$mux_S_Y[0] A[1]=read_n_$logic_and_B_Y_$mux_S_Y[1] A[2]=read_n_$logic_and_B_Y_$mux_S_Y[2] A[3]=read_n_$logic_and_B_Y_$mux_S_Y[3] B[0]=counter_$sub_A_Y[0] B[1]=counter_$sub_A_Y[1] B[2]=counter_$sub_A_Y[2] B[3]=counter_$sub_A_Y[3] S=write_n_$logic_and_B_Y Y[0]=write_n_$logic_and_B_Y_$mux_S_Y[0] Y[1]=write_n_$logic_and_B_Y_$mux_S_Y[1] Y[2]=write_n_$logic_and_B_Y_$mux_S_Y[2] Y[3]=write_n_$logic_and_B_Y_$mux_S_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $not A=write_n Y=write_n_$not_A_1_Y
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.names counter_$eq_A_1_Y_$mux_S_Y empty
1 1
.names counter_$eq_A_Y_$mux_S_Y full
1 1
.names counter_$ge_A_Y_$mux_S_Y half
1 1
.names read_n_$not_A_1_Y read_n_$not_A_2_Y
1 1
.names read_n_$not_A_1_Y read_n_$not_A_Y
1 1
.names write_n_$not_A_1_Y write_n_$not_A_Y
1 1
.end
