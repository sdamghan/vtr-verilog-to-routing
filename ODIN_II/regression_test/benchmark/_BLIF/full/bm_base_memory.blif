# Generated by Yosys 0.9+4008 (git sha1 1af99480, clang 10.0.0-4ubuntu1 -fPIC -Os)

.model bm_base_memory
.inputs clock we address_in[0] address_in[1] address_in[2] address_in[3] address_out[0] address_out[1] address_out[2] address_out[3] value_in[0] value_in[1] value_in[2] value_in[3]
.outputs value_out[0] value_out[1] value_out[2] value_out[3] out1[0] out1[1] out1[2] out1[3] out2[0] out2[1] out2[2] out2[3]
.subckt $dff CLK=clock D[0]=address_in[0] D[1]=address_in[1] D[2]=address_in[2] D[3]=address_in[3] Q[0]=address[0] Q[1]=address[1] Q[2]=address[2] Q[3]=address[3]
.param CLK_POLARITY 1
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=address_out_$memrd_ADDR_DATA_$mux_Y_A[0] A[1]=address_out_$memrd_ADDR_DATA_$mux_Y_A[1] A[2]=address_out_$memrd_ADDR_DATA_$mux_Y_A[2] A[3]=address_out_$memrd_ADDR_DATA_$mux_Y_A[3] B[0]=address_out_$memrd_ADDR_DATA_$mux_Y_B[0] B[1]=address_out_$memrd_ADDR_DATA_$mux_Y_B[1] B[2]=address_out_$memrd_ADDR_DATA_$mux_Y_B[2] B[3]=address_out_$memrd_ADDR_DATA_$mux_Y_B[3] S=address_out[3] Y[0]=address_out_$memrd_ADDR_DATA[0] Y[1]=address_out_$memrd_ADDR_DATA[1] Y[2]=address_out_$memrd_ADDR_DATA[2] Y[3]=address_out_$memrd_ADDR_DATA[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_A[0] A[1]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_A[1] A[2]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_A[2] A[3]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_A[3] B[0]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_B[0] B[1]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_B[1] B[2]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_B[2] B[3]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_B[3] S=address_out[2] Y[0]=address_out_$memrd_ADDR_DATA_$mux_Y_A[0] Y[1]=address_out_$memrd_ADDR_DATA_$mux_Y_A[1] Y[2]=address_out_$memrd_ADDR_DATA_$mux_Y_A[2] Y[3]=address_out_$memrd_ADDR_DATA_$mux_Y_A[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_A[0] A[1]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_A[1] A[2]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_A[2] A[3]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_A[3] B[0]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_B[0] B[1]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_B[1] B[2]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_B[2] B[3]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_B[3] S=address_out[2] Y[0]=address_out_$memrd_ADDR_DATA_$mux_Y_B[0] Y[1]=address_out_$memrd_ADDR_DATA_$mux_Y_B[1] Y[2]=address_out_$memrd_ADDR_DATA_$mux_Y_B[2] Y[3]=address_out_$memrd_ADDR_DATA_$mux_Y_B[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[0]_$dffe_Q_EN Q[0]=memory[0][0] Q[1]=memory[0][1] Q[2]=memory[0][2] Q[3]=memory[0][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[0]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[0]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A_$and_Y_A B=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A_$and_Y_B Y=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $not A=we_$mux_S_Y[0] Y=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $not A=we_$mux_S_Y[1] Y=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A_$and_Y_B
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B_$and_Y_A B=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B_$and_Y_B Y=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $not A=we_$mux_S_Y[2] Y=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $not A=we_$mux_S_Y[3] Y=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B_$and_Y_B
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=memory[0][0] A[1]=memory[0][1] A[2]=memory[0][2] A[3]=memory[0][3] B[0]=memory[1][0] B[1]=memory[1][1] B[2]=memory[1][2] B[3]=memory[1][3] S=address_out[0] Y[0]=memory[0]_$mux_A_Y[0] Y[1]=memory[0]_$mux_A_Y[1] Y[2]=memory[0]_$mux_A_Y[2] Y[3]=memory[0]_$mux_A_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=memory[0]_$mux_A_Y[0] A[1]=memory[0]_$mux_A_Y[1] A[2]=memory[0]_$mux_A_Y[2] A[3]=memory[0]_$mux_A_Y[3] B[0]=memory[2]_$mux_A_Y[0] B[1]=memory[2]_$mux_A_Y[1] B[2]=memory[2]_$mux_A_Y[2] B[3]=memory[2]_$mux_A_Y[3] S=address_out[1] Y[0]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_A[0] Y[1]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_A[1] Y[2]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_A[2] Y[3]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_A[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[10]_$dffe_Q_EN Q[0]=memory[10][0] Q[1]=memory[10][1] Q[2]=memory[10][2] Q[3]=memory[10][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[10]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[10]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[2]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[8]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[10]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=memory[10][0] A[1]=memory[10][1] A[2]=memory[10][2] A[3]=memory[10][3] B[0]=memory[11][0] B[1]=memory[11][1] B[2]=memory[11][2] B[3]=memory[11][3] S=address_out[0] Y[0]=memory[10]_$mux_A_Y[0] Y[1]=memory[10]_$mux_A_Y[1] Y[2]=memory[10]_$mux_A_Y[2] Y[3]=memory[10]_$mux_A_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[11]_$dffe_Q_EN Q[0]=memory[11][0] Q[1]=memory[11][1] Q[2]=memory[11][2] Q[3]=memory[11][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[11]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[11]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[3]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[8]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[11]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[12]_$dffe_Q_EN Q[0]=memory[12][0] Q[1]=memory[12][1] Q[2]=memory[12][2] Q[3]=memory[12][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[12]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[12]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[12]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[12]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=we_$mux_S_Y[2] B=we_$mux_S_Y[3] Y=memory[12]_$dffe_Q_EN_$and_Y_A_$and_Y_B
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=memory[12][0] A[1]=memory[12][1] A[2]=memory[12][2] A[3]=memory[12][3] B[0]=memory[13][0] B[1]=memory[13][1] B[2]=memory[13][2] B[3]=memory[13][3] S=address_out[0] Y[0]=memory[12]_$mux_A_Y[0] Y[1]=memory[12]_$mux_A_Y[1] Y[2]=memory[12]_$mux_A_Y[2] Y[3]=memory[12]_$mux_A_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=memory[12]_$mux_A_Y[0] A[1]=memory[12]_$mux_A_Y[1] A[2]=memory[12]_$mux_A_Y[2] A[3]=memory[12]_$mux_A_Y[3] B[0]=memory[14]_$mux_A_Y[0] B[1]=memory[14]_$mux_A_Y[1] B[2]=memory[14]_$mux_A_Y[2] B[3]=memory[14]_$mux_A_Y[3] S=address_out[1] Y[0]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_B[0] Y[1]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_B[1] Y[2]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_B[2] Y[3]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_B[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[13]_$dffe_Q_EN Q[0]=memory[13][0] Q[1]=memory[13][1] Q[2]=memory[13][2] Q[3]=memory[13][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[13]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[13]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[1]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[12]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[13]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[14]_$dffe_Q_EN Q[0]=memory[14][0] Q[1]=memory[14][1] Q[2]=memory[14][2] Q[3]=memory[14][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[14]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[14]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[2]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[12]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[14]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=memory[14][0] A[1]=memory[14][1] A[2]=memory[14][2] A[3]=memory[14][3] B[0]=memory[15][0] B[1]=memory[15][1] B[2]=memory[15][2] B[3]=memory[15][3] S=address_out[0] Y[0]=memory[14]_$mux_A_Y[0] Y[1]=memory[14]_$mux_A_Y[1] Y[2]=memory[14]_$mux_A_Y[2] Y[3]=memory[14]_$mux_A_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[15]_$dffe_Q_EN Q[0]=memory[15][0] Q[1]=memory[15][1] Q[2]=memory[15][2] Q[3]=memory[15][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[15]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[15]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[3]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[12]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[15]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[1]_$dffe_Q_EN Q[0]=memory[1][0] Q[1]=memory[1][1] Q[2]=memory[1][2] Q[3]=memory[1][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[1]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[1]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[1]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[1]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=we_$mux_S_Y[0] B=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A_$and_Y_B Y=memory[1]_$dffe_Q_EN_$and_Y_A_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[2]_$dffe_Q_EN Q[0]=memory[2][0] Q[1]=memory[2][1] Q[2]=memory[2][2] Q[3]=memory[2][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[2]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[2]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[2]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[2]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A_$and_Y_A B=we_$mux_S_Y[1] Y=memory[2]_$dffe_Q_EN_$and_Y_A_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=memory[2][0] A[1]=memory[2][1] A[2]=memory[2][2] A[3]=memory[2][3] B[0]=memory[3][0] B[1]=memory[3][1] B[2]=memory[3][2] B[3]=memory[3][3] S=address_out[0] Y[0]=memory[2]_$mux_A_Y[0] Y[1]=memory[2]_$mux_A_Y[1] Y[2]=memory[2]_$mux_A_Y[2] Y[3]=memory[2]_$mux_A_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[3]_$dffe_Q_EN Q[0]=memory[3][0] Q[1]=memory[3][1] Q[2]=memory[3][2] Q[3]=memory[3][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[3]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[3]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[3]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[3]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=we_$mux_S_Y[0] B=we_$mux_S_Y[1] Y=memory[3]_$dffe_Q_EN_$and_Y_A_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[4]_$dffe_Q_EN Q[0]=memory[4][0] Q[1]=memory[4][1] Q[2]=memory[4][2] Q[3]=memory[4][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[4]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[4]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[4]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[4]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=we_$mux_S_Y[2] B=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B_$and_Y_B Y=memory[4]_$dffe_Q_EN_$and_Y_A_$and_Y_B
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=memory[4][0] A[1]=memory[4][1] A[2]=memory[4][2] A[3]=memory[4][3] B[0]=memory[5][0] B[1]=memory[5][1] B[2]=memory[5][2] B[3]=memory[5][3] S=address_out[0] Y[0]=memory[4]_$mux_A_Y[0] Y[1]=memory[4]_$mux_A_Y[1] Y[2]=memory[4]_$mux_A_Y[2] Y[3]=memory[4]_$mux_A_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=memory[4]_$mux_A_Y[0] A[1]=memory[4]_$mux_A_Y[1] A[2]=memory[4]_$mux_A_Y[2] A[3]=memory[4]_$mux_A_Y[3] B[0]=memory[6]_$mux_A_Y[0] B[1]=memory[6]_$mux_A_Y[1] B[2]=memory[6]_$mux_A_Y[2] B[3]=memory[6]_$mux_A_Y[3] S=address_out[1] Y[0]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_B[0] Y[1]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_B[1] Y[2]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_B[2] Y[3]=address_out_$memrd_ADDR_DATA_$mux_Y_A_$mux_Y_B[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[5]_$dffe_Q_EN Q[0]=memory[5][0] Q[1]=memory[5][1] Q[2]=memory[5][2] Q[3]=memory[5][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[5]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[5]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[1]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[4]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[5]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[6]_$dffe_Q_EN Q[0]=memory[6][0] Q[1]=memory[6][1] Q[2]=memory[6][2] Q[3]=memory[6][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[6]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[6]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[2]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[4]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[6]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=memory[6][0] A[1]=memory[6][1] A[2]=memory[6][2] A[3]=memory[6][3] B[0]=memory[7][0] B[1]=memory[7][1] B[2]=memory[7][2] B[3]=memory[7][3] S=address_out[0] Y[0]=memory[6]_$mux_A_Y[0] Y[1]=memory[6]_$mux_A_Y[1] Y[2]=memory[6]_$mux_A_Y[2] Y[3]=memory[6]_$mux_A_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[7]_$dffe_Q_EN Q[0]=memory[7][0] Q[1]=memory[7][1] Q[2]=memory[7][2] Q[3]=memory[7][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[7]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[7]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[3]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[4]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[7]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[8]_$dffe_Q_EN Q[0]=memory[8][0] Q[1]=memory[8][1] Q[2]=memory[8][2] Q[3]=memory[8][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[8]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[8]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[8]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[8]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[0]_$dffe_Q_EN_$and_Y_A_$and_Y_B_$and_Y_A B=we_$mux_S_Y[3] Y=memory[8]_$dffe_Q_EN_$and_Y_A_$and_Y_B
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $mux A[0]=memory[8][0] A[1]=memory[8][1] A[2]=memory[8][2] A[3]=memory[8][3] B[0]=memory[9][0] B[1]=memory[9][1] B[2]=memory[9][2] B[3]=memory[9][3] S=address_out[0] Y[0]=memory[8]_$mux_A_Y[0] Y[1]=memory[8]_$mux_A_Y[1] Y[2]=memory[8]_$mux_A_Y[2] Y[3]=memory[8]_$mux_A_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=memory[8]_$mux_A_Y[0] A[1]=memory[8]_$mux_A_Y[1] A[2]=memory[8]_$mux_A_Y[2] A[3]=memory[8]_$mux_A_Y[3] B[0]=memory[10]_$mux_A_Y[0] B[1]=memory[10]_$mux_A_Y[1] B[2]=memory[10]_$mux_A_Y[2] B[3]=memory[10]_$mux_A_Y[3] S=address_out[1] Y[0]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_A[0] Y[1]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_A[1] Y[2]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_A[2] Y[3]=address_out_$memrd_ADDR_DATA_$mux_Y_B_$mux_Y_A[3]
.param WIDTH 00000000000000000000000000000100
.subckt $dffe CLK=clock D[0]=we_$mux_S_1_Y[0] D[1]=we_$mux_S_1_Y[1] D[2]=we_$mux_S_1_Y[2] D[3]=we_$mux_S_1_Y[3] EN=memory[9]_$dffe_Q_EN Q[0]=memory[9][0] Q[1]=memory[9][1] Q[2]=memory[9][2] Q[3]=memory[9][3]
.param CLK_POLARITY 00000000000000000000000000000001
.param EN_POLARITY 00000000000000000000000000000001
.param WIDTH 00000000000000000000000000000100
.subckt $and A=memory[9]_$dffe_Q_EN_$and_Y_A B=we_$mux_S_2_Y[3] Y=memory[9]_$dffe_Q_EN
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A=memory[1]_$dffe_Q_EN_$and_Y_A_$and_Y_A B=memory[8]_$dffe_Q_EN_$and_Y_A_$and_Y_B Y=memory[9]_$dffe_Q_EN_$and_Y_A
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000001
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000001
.subckt $and A[0]=out1[0] A[1]=out1[1] A[2]=out1[2] A[3]=out1[3] B=$false Y[0]=out1_$and_A_Y[0] Y[1]=out1_$and_A_Y[1] Y[2]=out1_$and_A_Y[2] Y[3]=out1_$and_A_Y[3]
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000001
.param Y_WIDTH 00000000000000000000000000000100
.subckt $dff CLK=clock D[0]=value_out_$and_A_Y[0] D[1]=value_out_$and_A_Y[1] D[2]=value_out_$and_A_Y[2] D[3]=value_out_$and_A_Y[3] Q[0]=out1[0] Q[1]=out1[1] Q[2]=out1[2] Q[3]=out1[3]
.param CLK_POLARITY 1
.param WIDTH 00000000000000000000000000000100
.subckt $dff CLK=clock D[0]=out1_$and_A_Y[0] D[1]=out1_$and_A_Y[1] D[2]=out1_$and_A_Y[2] D[3]=out1_$and_A_Y[3] Q[0]=out2[0] Q[1]=out2[1] Q[2]=out2[2] Q[3]=out2[3]
.param CLK_POLARITY 1
.param WIDTH 00000000000000000000000000000100
.subckt $and A[0]=address_out_$memrd_ADDR_DATA[0] A[1]=address_out_$memrd_ADDR_DATA[1] A[2]=address_out_$memrd_ADDR_DATA[2] A[3]=address_out_$memrd_ADDR_DATA[3] B[0]=address_in[0] B[1]=address_in[1] B[2]=address_in[2] B[3]=address_in[3] Y[0]=value_out_$and_A_Y[0] Y[1]=value_out_$and_A_Y[1] Y[2]=value_out_$and_A_Y[2] Y[3]=value_out_$and_A_Y[3]
.param A_SIGNED 00000000000000000000000000000000
.param A_WIDTH 00000000000000000000000000000100
.param B_SIGNED 00000000000000000000000000000000
.param B_WIDTH 00000000000000000000000000000100
.param Y_WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=$undef A[1]=$undef A[2]=$undef A[3]=$undef B[0]=address[0] B[1]=address[1] B[2]=address[2] B[3]=address[3] S=we Y[0]=we_$mux_S_Y[0] Y[1]=we_$mux_S_Y[1] Y[2]=we_$mux_S_Y[2] Y[3]=we_$mux_S_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A[0]=$undef A[1]=$undef A[2]=$undef A[3]=$undef B[0]=value_in[0] B[1]=value_in[1] B[2]=value_in[2] B[3]=value_in[3] S=we Y[0]=we_$mux_S_1_Y[0] Y[1]=we_$mux_S_1_Y[1] Y[2]=we_$mux_S_1_Y[2] Y[3]=we_$mux_S_1_Y[3]
.param WIDTH 00000000000000000000000000000100
.subckt $mux A=$false B=$true S=we Y=we_$mux_S_2_Y[3]
.param WIDTH 00000000000000000000000000000001
.names we_$mux_S_2_Y[3] we_$mux_S_2_Y[0]
1 1
.names we_$mux_S_2_Y[3] we_$mux_S_2_Y[1]
1 1
.names we_$mux_S_2_Y[3] we_$mux_S_2_Y[2]
1 1
.names address_out_$memrd_ADDR_DATA[0] value_out[0]
1 1
.names address_out_$memrd_ADDR_DATA[1] value_out[1]
1 1
.names address_out_$memrd_ADDR_DATA[2] value_out[2]
1 1
.names address_out_$memrd_ADDR_DATA[3] value_out[3]
1 1
.names we we_$eq_A_Y
1 1
.end
